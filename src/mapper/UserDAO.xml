<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ssm.dao.UserDAO">
  <resultMap id="BaseResultMap" type="ssm.domain.User">
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <insert id="insert" parameterType="ssm.domain.User">
    insert into user (`uid`, username, `password`, 
      `status`)
    values (#{uid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="ssm.domain.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        `uid`,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="findAll" resultType="ssm.domain.User">
  	select uid,username,password,status from user
  </select>
  
  <delete id="deleteById" parameterType="Integer">
  	DELETE FROM user WHERE uid=#{id,jdbcType=INTEGER}
  </delete>
  <update id="updateById" parameterType="ssm.domain.User">
  	UPDATE user SET username = #{username,jdbcType=VARCHAR}, password = #{password,jdbcType=VARCHAR}, status = #{status,jdbcType=INTEGER} WHERE uid = #{uid,jdbcType=INTEGER}
  </update>
  <select id="selectById" parameterType="Integer" resultType="ssm.domain.User">
  select uid,username,password,status from user where uid=#{id,jdbcType=INTEGER}
  </select>
  
  <select id="findAllByPage" parameterType="java.util.Map" resultType="ssm.domain.User">
  select uid,username,password,status from user LIMIT #{start,jdbcType=INTEGER},#{size,jdbcType=INTEGER}
  </select>
  
  <select id="count" resultType="Long">
  	select count(uid) from user
  </select>
  
</mapper>